## Feature Configuration

# Using tf.feature_column in TensorFlow.
# see https://www.tensorflow.org/api_docs/python/tf/feature_column

# Each feature consists 3 attributes `type`, `transform`, `parameter`.
# 1. feature: feature name required, must in schema.yaml.
# 2. type: required, feature type, `category` or `continuous`.
# 3. transform: feature transform.
# 4. parameter: main parameter for transform.
#    (1) type: category
#         transform: `hash_bucket` or `vocab` or `identity`.
#           hash_bucket  ==> tf.feature.categorical_column_with_hash_bucket
#           vocab        ==> tf.feature.categorical_column_with_vocabulary_list
#           identity     ==> tf. feature.categorical_column_with_identity
#         parameter: examples as follows,
#           1000            (hash_bucket_size  for `hash_bucket`)
#           ['a', 'b', 'c'] (vocabulary_list for `vocab`)
#           15              (num_buckets  for `identity`)
#    (2) type: continuous
#         transform: `min_max`, `log`, `standard` normalization for normalizer_fn in
#                    tf.feature_column.numeric_column, set empty to not do normalization.
#           `min_max`    ==> x = (x-min) / (x-max);
#           `log`        ==> x = log(x), all feature values must >= 1
#           `standard`   ==> x = (x-mean) / std
#
#         parameter:
#           normalization: [min, max] or [mean, std] list for `min_max` or `standard`; set empty for `log`.
#           boundaries: optional, set boundaries, eg: [5, 10, 15, 20] for `discretize`
#                       (bucketized continuous feature for wide input or as cross feature),
#                       set empty for not use continuous feature for wide input.
# Set unused features by using symbol `#` ahead of the lines.
# Category features with hash_bucket using embedding_column to feed deep, others by indicator_column.
# All listed features are used in model.


# Q & A about hash_bucket_size:
# If category size=1000, how much should hash_bucket_size be ?
#   An interesting discovery is that randomly chose N number a_i between 1~N, i=1,...N
#     let b_i = a_i % N, the distinct b_i from all N number is about 0.633.
#     in other words, a random hash func chose N as hash_bucket_size collision rate is 0.633.
#   Recommend `hash_bucket_size` to be 2~3*category size.
#     larger `hash_bucket_size` require more memory and complexity, but smaller cause more collision
#   Here use the strategy that
#     for low sparsity category, set `hash_bucket_size` 3~4*category size to reduce collision
#     for high sparsity category, set 1.5~2*category size to save memory.

# TODO: support all tf.feature_column.


# 47 -> 42 table, algorithm generated
# table_size_PLRAM=[1000, 1000, 1000, 1000, 3000, 10000, 10000, 10000]
# data_size_PLRAM = [4, 4, 4, 4, 8, 8, 8, 8]

# table_size_HBM=[10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 20000, 30000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 100000, 500000, 500000, 500000, 1000000]
# data_size_HBM = [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 16, 16]

# table_size_DDR=[10000000, 10000000]
# data_size_DDR = [16, 16]

# 16 * hash bucket 
# 100 * 3 + 500 * 2 + 1000 * 5 + 10000 * 3 + 20000 * 1 + 500000 * 1 + 10000000 * 1


##### PLRAN started #####

# Small: 100 * 3 + 500 * 2 
province_id:
  type: category
  transform: hash_bucket
  parameter: 1000

app_version:
  type: category
  transform: hash_bucket
  parameter: 1000

ad_idea_types:
  type: category
  transform: hash_bucket
  parameter: 1000

category:
  type: category
  transform: hash_bucket
  parameter: 1000

article_tag:
  type: category
  transform: hash_bucket
  parameter: 3000




# Medium: 1000 * 5 + 10000 * 3 + 20000 * 1 
ucomp:
  type: category
  transform: hash_bucket
  parameter: 10000

user_cates:
  type: category
  transform: hash_bucket
  parameter: 10000

city_id:
  type: category
  transform: hash_bucket
  parameter: 10000

##### PLRAN finished #####
##### HBM started (first 7) #####

user_industrys:
  type: category
  transform: hash_bucket
  parameter: 10000

ad_cates:
  type: category
  transform: hash_bucket
  parameter: 10000

adplan_id:
  type: category
  transform: hash_bucket
  parameter: 10000

scheduling_id:
  type: category
  transform: hash_bucket
  parameter: 10000

device_model:
  type: category
  transform: hash_bucket
  parameter: 10000

idea_id:
  type: category
  transform: hash_bucket
  parameter: 10000

# Large: 500000 * 1 + 10000000 * 1
ip_original:
  type: category
  transform: hash_bucket
  parameter: 10000

##### HBM ended (first 7) #####

##### DDR first 1
u:
  type: category
  transform: hash_bucket
  parameter: 10000000


## vocab & id

os0:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5]

device_type0:
  type: category
  transform: vocab
  parameter: [0,1,2]


client_type0:
  type: category
  transform: vocab
  parameter: ['a', 'w']

network0:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4]

location0:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7,8,9,20,21,22,23,24,25,26,27,28,29,50,51,52,53,54,60,101,102,200,201,202,301,302,303,304,1001,1002,2001,2002,3001,3002,4001,4002,5001,5002,6001,6002,7001,7002,8001,8002,9001,10001,10002,11001,11002]

isweekend0:
  type: category
  transform: vocab
  parameter: [0,1]

weekdays0:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7]

day0:
  type: category
  transform: vocab
  parameter: ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15',
             '16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']

hour0:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

site0:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,8,9,10,11]

status0:
  type: category
  transform: vocab
  parameter: [0,1,2,3]

is_cache0:
  type: category
  transform: vocab
  parameter: [0,1]

is_pasv_flush0:
  type: category
  transform: vocab
  parameter: [0,1]

isp0:
  type: category
  transform: vocab
  parameter: [1,2,3,4]

ugender0:
  type: category
  transform: vocab
  parameter: [male,female]

rk_age_range0:
  type: category
  transform: vocab
  parameter: [6-10,11-15,16-20,21-25,26-30,31-35,36-40,41-45,46-50,51-55,56-60]

rk_hour0:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

idea_type0:
  type: category
  transform: identity
  parameter: 15

industry_level1_id0:
  type: category
  transform: identity
  parameter: 18

industry_level2_id0:
  type: category
  transform: identity
  parameter: 152

longitude0:
  type: continuous
  transform: min_max
  parameter:
    normalization: [80,150]
    boundaries: [90,95,100,105,110,115,120,125,130]

latitude0:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10,60]
    boundaries: [20,25,30,35,40,45,50]

age0:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10, 90]
    boundaries:  [15,20,25,30,35,40,45,50,55,60,65]


os1:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5]

device_type1:
  type: category
  transform: vocab
  parameter: [0,1,2]


client_type1:
  type: category
  transform: vocab
  parameter: ['a', 'w']

network1:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4]

location1:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7,8,9,20,21,22,23,24,25,26,27,28,29,50,51,52,53,54,60,101,102,200,201,202,301,302,303,304,1001,1002,2001,2002,3001,3002,4001,4002,5001,5002,6001,6002,7001,7002,8001,8002,9001,10001,10002,11001,11002]

isweekend1:
  type: category
  transform: vocab
  parameter: [0,1]

weekdays1:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7]

day1:
  type: category
  transform: vocab
  parameter: ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15',
             '16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']

hour1:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

site1:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,8,9,10,11]

status1:
  type: category
  transform: vocab
  parameter: [0,1,2,3]

is_cache1:
  type: category
  transform: vocab
  parameter: [0,1]

is_pasv_flush1:
  type: category
  transform: vocab
  parameter: [0,1]

isp1:
  type: category
  transform: vocab
  parameter: [1,2,3,4]

ugender1:
  type: category
  transform: vocab
  parameter: [male,female]

rk_age_range1:
  type: category
  transform: vocab
  parameter: [6-10,11-15,16-20,21-25,26-30,31-35,36-40,41-45,46-50,51-55,56-60]

rk_hour1:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

idea_type1:
  type: category
  transform: identity
  parameter: 15

industry_level1_id1:
  type: category
  transform: identity
  parameter: 18

industry_level2_id1:
  type: category
  transform: identity
  parameter: 152

longitude1:
  type: continuous
  transform: min_max
  parameter:
    normalization: [80,150]
    boundaries: [90,95,100,105,110,115,120,125,130]

latitude1:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10,60]
    boundaries: [20,25,30,35,40,45,50]

age1:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10, 90]
    boundaries:  [15,20,25,30,35,40,45,50,55,60,65]


os2:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5]

device_type2:
  type: category
  transform: vocab
  parameter: [0,1,2]

client_type2:
  type: category
  transform: vocab
  parameter: ['a', 'w']

network2:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4]

location2:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7,8,9,20,21,22,23,24,25,26,27,28,29,50,51,52,53,54,60,101,102,200,201,202,301,302,303,304,1001,1002,2001,2002,3001,3002,4001,4002,5001,5002,6001,6002,7001,7002,8001,8002,9001,10001,10002,11001,11002]

isweekend2:
  type: category
  transform: vocab
  parameter: [0,1]

weekdays2:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,7]

day2:
  type: category
  transform: vocab
  parameter: ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15',
             '16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']

hour2:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

site2:
  type: category
  transform: vocab
  parameter: [1,2,3,4,5,6,8,9,10,11]

status2:
  type: category
  transform: vocab
  parameter: [0,1,2,3]

is_cache2:
  type: category
  transform: vocab
  parameter: [0,1]

is_pasv_flush2:
  type: category
  transform: vocab
  parameter: [0,1]

isp2:
  type: category
  transform: vocab
  parameter: [1,2,3,4]

ugender2:
  type: category
  transform: vocab
  parameter: [male,female]

rk_age_range2:
  type: category
  transform: vocab
  parameter: [6-10,11-15,16-20,21-25,26-30,31-35,36-40,41-45,46-50,51-55,56-60]

rk_hour2:
  type: category
  transform: vocab
  parameter: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]

idea_type2:
  type: category
  transform: identity
  parameter: 15

industry_level1_id2:
  type: category
  transform: identity
  parameter: 18

industry_level2_id2:
  type: category
  transform: identity
  parameter: 152

longitude2:
  type: continuous
  transform: min_max
  parameter:
    normalization: [80,150]
    boundaries: [90,95,100,105,110,115,120,125,130]

latitude2:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10,60]
    boundaries: [20,25,30,35,40,45,50]

age2:
  type: continuous
  transform: min_max
  parameter:
    normalization: [10, 90]
    boundaries:  [15,20,25,30,35,40,45,50,55,60,65]

#Request_id;category;hash_bucket;500000
#account_id;category;hash_bucket;1000
#dt;category;vocab;0
#host_name;category;hash_bucket;30
#request_tm;category;hash_bucket;1000
#log_version;category;vocab;1
#pay;continuous;discretize;100000,200000,300000,500000,1000000,1500000
#ecpm;continuous;discretize;50000,100000,200000,500000,1000000,2000000,5000000,10000000
#ecpm2;continuous;discretize;50000,100000,200000,500000,1000000,2000000,5000000,10000000
#winprc;continuous;discretize;500,1000,2000,5000,10000,50000,100000,150000,200000,250000,300000,350000,400000,500000
#ctr;continuous;discretize;10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,110000,120000,130000,140000,150000,160000,170000,180000,190000,200000,210000,220000,230000
#rpid;category;vocab;0
#market;category;vocab;0,1
#combine_id;category;hash_bucket;220000